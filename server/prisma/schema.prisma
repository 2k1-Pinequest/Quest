generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String // hashed password
  rooms     Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id          Int    @id @default(autoincrement())
  studentName String
  email       String @unique
  password    String
  roomId      Int?
  room        Room?  @relation(fields: [roomId], references: [id])

  submissions StudentSubmission[]
  aiAnalyses  StudentAssignmentAi[] // 1:n болж байна

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id          Int          @id @default(autoincrement())
  roomName    String
  code        String       @unique
  students    Student[]
  assignments Assignment[]

  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// ========== ASSIGNMENT ==========
//

model Assignment {
  id          Int      @id @default(autoincrement())
  roomId      Int
  room        Room     @relation(fields: [roomId], references: [id])
  title       String
  description String?
  textContent String?   

  submissions StudentSubmission[]
  aiAnalyses  StudentAssignmentAi[]

  dueDate     DateTime? // Дуусах хугацаа нэмэгдлээ
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
//
// ========== СУРАГЧИЙН ОРУУЛСАН ХАРИУЛТ ==========
//
model StudentSubmission {
  id           Int        @id @default(autoincrement())
  assignmentId Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  studentId    Int
  student      Student    @relation(fields: [studentId], references: [id])

  answerText String? // текстээр оруулсан хариулт
  fileUrl    String? // файл хавсаргасан бол
  score      Float? // AI эсвэл багшийн оноо
  feedback   String? // тайлбар
  aiAnalysis Json? // AI-н дэлгэрэнгүй JSON анализ

  submittedAt DateTime @default(now())
}

//
// ========== СУРАГЧИЙН ЕРӨНХИЙ ДҮГНЭЛТ (AI) ==========
//
model StudentAssignmentAi {
  id           Int @id @default(autoincrement())
  studentId    Int
  assignmentId Int

  student    Student    @relation(fields: [studentId], references: [id])
  assignment Assignment @relation(fields: [assignmentId], references: [id])

  score       Int
  summary     String
  mistakes    String[]
  suggestions String[]
  overall     String

  @@unique([studentId, assignmentId]) // нэг даалгаварт 1 удаа л дүгнэлт
}

// model Question {
//   id           Int             @id @default(autoincrement())
//   assignmentId Int
//   assignment   Assignment      @relation(fields: [assignmentId], references: [id])
//   text         String
//   answers      StudentAnswer[]
//   createdAt    DateTime        @default(now())
//   updatedAt    DateTime        @updatedAt
// }

// model StudentAnswer {
//   id         Int      @id @default(autoincrement())
//   studentId  Int
//   student    Student  @relation(fields: [studentId], references: [id])
//   questionId Int
//   question   Question @relation(fields: [questionId], references: [id])

//   answerText String // Сурагчийн өгсөн хариулт
//   score      Float? // AI эсвэл багшийн оноо
//   feedback   String? // AI эсвэл багшийн өгсөн тайлбар
//   aiAnalysis Json? // AI-с гарсан нэмэлт анализ (JSON хадгална)

//   answeredAt DateTime @default(now())
// }
