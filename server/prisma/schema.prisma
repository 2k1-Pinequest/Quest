generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ========== TEACHER (Authentication орно) ==========
//
model Teacher {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String // hashed password
  rooms     Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// ========== STUDENT (Authentication орно) ==========
//
model Student {
  id          Int             @id @default(autoincrement())
  studentName String
  email       String          @unique
  password    String
  roomId      Int?
  room        Room?           @relation(fields: [roomId], references: [id])
  answers     StudentAnswer[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

//
// ========== ROOM ==========
//
model Room {
  id          Int          @id @default(autoincrement())
  roomName    String
  code        String       @unique
  students    Student[]
  assignments Assignment[]

  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// ========== ASSIGNMENT ==========
//
model Assignment {
  id          Int        @id @default(autoincrement())
  roomId      Int
  room        Room       @relation(fields: [roomId], references: [id])
  title       String
  description String?
  fileUrl     String? // Хавсралт файл эсвэл зураг
  questions   Question[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

//
// ========== QUESTION ==========
//
model Question {
  id           Int             @id @default(autoincrement())
  assignmentId Int
  assignment   Assignment      @relation(fields: [assignmentId], references: [id])
  text         String
  answers      StudentAnswer[]
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

//
// ========== STUDENT ANSWER (AI үнэлгээтэй) ==========
//
model StudentAnswer {
  id         Int      @id @default(autoincrement())
  studentId  Int
  student    Student  @relation(fields: [studentId], references: [id])
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])

  answerText String // Сурагчийн өгсөн хариулт
  score      Float? // AI эсвэл багшийн оноо
  feedback   String? // AI эсвэл багшийн өгсөн тайлбар
  aiAnalysis Json? // AI-с гарсан нэмэлт анализ (JSON хадгална)

  answeredAt DateTime @default(now())
}
